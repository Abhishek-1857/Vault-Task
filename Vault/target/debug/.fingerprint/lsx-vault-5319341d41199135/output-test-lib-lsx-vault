{"message":"expected `;`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":36290,"byte_end":36291,"line_start":1019,"line_end":1019,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":36289,"byte_end":36289,"line_start":1018,"line_end":1018,"column_start":6,"column_end":6,"is_primary":true,"text":[{"text":"    )","highlight_start":6,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":36289,"byte_end":36289,"line_start":1018,"line_end":1018,"column_start":6,"column_end":6,"is_primary":true,"text":[{"text":"    )","highlight_start":6,"highlight_end":6}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `;`, found `}`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:1018:6\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1018\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1019\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected token\u001b[0m\n\n"}
{"message":"type ascription cannot be followed by a method call","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49481,"line_start":1426,"line_end":1426,"column_start":15,"column_end":66,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the type ascription","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":49433,"byte_end":49481,"line_start":1426,"line_end":1426,"column_start":18,"column_end":66,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":18,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: type ascription cannot be followed by a method call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:1426:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove the type ascription\u001b[0m\n\n"}
{"message":"expected value, found enum `Key`","code":{"code":"E0423","explanation":"An identifier was used like a function name or a value was expected and the\nidentifier exists but it belongs to a different namespace.\n\nErroneous code example:\n\n```compile_fail,E0423\nstruct Foo { a: bool };\n\nlet f = Foo();\n// error: expected function, tuple struct or tuple variant, found `Foo`\n// `Foo` is a struct name, but this expression uses it like a function name\n```\n\nPlease verify you didn't misspell the name of what you actually wanted to use\nhere. Example:\n\n```\nfn Foo() -> u32 { 0 }\n\nlet f = Foo(); // ok!\n```\n\nIt is common to forget the trailing `!` on macro invocations, which would also\nyield this error:\n\n```compile_fail,E0423\nprintln(\"\");\n// error: expected function, tuple struct or tuple variant,\n// found macro `println`\n// did you mean `println!(...)`? (notice the trailing `!`)\n```\n\nAnother case where this error is emitted is when a value is expected, but\nsomething else is found:\n\n```compile_fail,E0423\npub mod a {\n    pub const I: i32 = 1;\n}\n\nfn h1() -> i32 {\n    a.I\n    //~^ ERROR expected value, found module `a`\n    // did you mean `a::I`?\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following enum variants are available","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"(contract::Key::Ref(/* fields */))","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"(contract::Key::Val128(/* fields */))","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"(contract::Key::Val16(/* fields */))","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"(contract::Key::Val32(/* fields */))","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"(contract::Key::Val64(/* fields */))","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/contract.rs","byte_start":49430,"byte_end":49433,"line_start":1426,"line_end":1426,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"(contract::Key::Val8(/* fields */))","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0423]\u001b[0m\u001b[0m\u001b[1m: expected value, found enum `Key`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:1426:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following enum variants are available\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let key = \u001b[0m\u001b[0m\u001b[38;5;10m(contract::Key::Ref(/* fields */))\u001b[0m\u001b[0m:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let key = \u001b[0m\u001b[0m\u001b[38;5;10m(contract::Key::Val128(/* fields */))\u001b[0m\u001b[0m:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let key = \u001b[0m\u001b[0m\u001b[38;5;10m(contract::Key::Val16(/* fields */))\u001b[0m\u001b[0m:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let key = \u001b[0m\u001b[0m\u001b[38;5;10m(contract::Key::Val32(/* fields */))\u001b[0m\u001b[0m:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m       and 2 other candidates\u001b[0m\n\n"}
{"message":"expected type, found local variable `account`","code":{"code":"E0573","explanation":"Something other than a type has been used when one was expected.\n\nErroneous code examples:\n\n```compile_fail,E0573\nenum Dragon {\n    Born,\n}\n\nfn oblivion() -> Dragon::Born { // error!\n    Dragon::Born\n}\n\nconst HOBBIT: u32 = 2;\nimpl HOBBIT {} // error!\n\nenum Wizard {\n    Gandalf,\n    Saruman,\n}\n\ntrait Isengard {\n    fn wizard(_: Wizard::Saruman); // error!\n}\n```\n\nIn all these errors, a type was expected. For example, in the first error, if\nwe want to return the `Born` variant from the `Dragon` enum, we must set the\nfunction to return the enum and not its variant:\n\n```\nenum Dragon {\n    Born,\n}\n\nfn oblivion() -> Dragon { // ok!\n    Dragon::Born\n}\n```\n\nIn the second error, you can't implement something on an item, only on types.\nWe would need to create a new type if we wanted to do something similar:\n\n```\nstruct Hobbit(u32); // we create a new type\n\nconst HOBBIT: Hobbit = Hobbit(2);\nimpl Hobbit {} // ok!\n```\n\nIn the third case, we tried to only expect one variant of the `Wizard` enum,\nwhich is not possible. To make this work, we need to using pattern matching\nover the `Wizard` enum:\n\n```\nenum Wizard {\n    Gandalf,\n    Saruman,\n}\n\ntrait Isengard {\n    fn wizard(w: Wizard) { // ok!\n        match w {\n            Wizard::Saruman => {\n                // do something\n            }\n            _ => {} // ignore everything else\n        }\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":49435,"byte_end":49442,"line_start":1426,"line_end":1426,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":20,"highlight_end":27}],"label":"not a type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe you meant to write a path separator here","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":49433,"byte_end":49434,"line_start":1426,"line_end":1426,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"::","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0573]\u001b[0m\u001b[0m\u001b[1m: expected type, found local variable `account`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:1426:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let key = Key:(account, collateral_token,index_token,is_long).as_bytes();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a type\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: maybe you meant to write a path separator here: `::`\u001b[0m\n\n"}
{"message":"unused import: `QueryMsg`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":150,"byte_end":158,"line_start":6,"line_end":6,"column_start":46,"column_end":54,"is_primary":true,"text":[{"text":"use crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg};","highlight_start":46,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":148,"byte_end":158,"line_start":6,"line_end":6,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"use crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg};","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `QueryMsg`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:6:46\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":692,"byte_end":696,"line_start":13,"line_end":13,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"    TOKEN_DECIMALS, TOKEN_WEIGHTS, USDG_AMOUNTS, WHITELISTED_TOKENS, self,","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":690,"byte_end":696,"line_start":13,"line_end":13,"column_start":68,"column_end":74,"is_primary":true,"text":[{"text":"    TOKEN_DECIMALS, TOKEN_WEIGHTS, USDG_AMOUNTS, WHITELISTED_TOKENS, self,","highlight_start":68,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:13:70\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TOKEN_DECIMALS, TOKEN_WEIGHTS, USDG_AMOUNTS, WHITELISTED_TOKENS, self,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Binary`, `CanonicalAddr`, `Deps`, `StdResult`, `Uint256`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":749,"byte_end":755,"line_start":16,"line_end":16,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":29,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":768,"byte_end":772,"line_start":16,"line_end":16,"column_start":48,"column_end":52,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":48,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":774,"byte_end":783,"line_start":16,"line_end":16,"column_start":54,"column_end":63,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":54,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":794,"byte_end":801,"line_start":16,"line_end":16,"column_start":74,"column_end":81,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":74,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":814,"byte_end":827,"line_start":16,"line_end":16,"column_start":94,"column_end":107,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":94,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":747,"byte_end":755,"line_start":16,"line_end":16,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":27,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":766,"byte_end":783,"line_start":16,"line_end":16,"column_start":46,"column_end":63,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":46,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":792,"byte_end":801,"line_start":16,"line_end":16,"column_start":72,"column_end":81,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":72,"highlight_end":81}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":812,"byte_end":827,"line_start":16,"line_end":16,"column_start":92,"column_end":107,"is_primary":true,"text":[{"text":"    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,","highlight_start":92,"highlight_end":107}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Binary`, `CanonicalAddr`, `Deps`, `StdResult`, `Uint256`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:16:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256, WasmQuery, CanonicalAddr,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Coin`, `Uint128`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":857,"byte_end":861,"line_start":18,"line_end":18,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response, Uint128};","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":900,"byte_end":907,"line_start":18,"line_end":18,"column_start":69,"column_end":76,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response, Uint128};","highlight_start":69,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":855,"byte_end":861,"line_start":18,"line_end":18,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response, Uint128};","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":898,"byte_end":907,"line_start":18,"line_end":18,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response, Uint128};","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Coin`, `Uint128`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:18:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response, Uint128};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":34842,"byte_end":34873,"line_start":995,"line_end":995,"column_start":6,"column_end":37,"is_primary":true,"text":[{"text":") -> Result<Response, ContractError> {","highlight_start":6,"highlight_end":37}],"label":"expected enum `Result`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":34647,"byte_end":34668,"line_start":986,"line_end":986,"column_start":4,"column_end":25,"is_primary":false,"text":[{"text":"fn try_increase_position(","highlight_start":4,"highlight_end":25}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Response, ContractError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider returning the local binding `key`","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":36289,"byte_end":36289,"line_start":1018,"line_end":1018,"column_start":6,"column_end":6,"is_primary":true,"text":[{"text":"    )","highlight_start":6,"highlight_end":6}],"label":null,"suggested_replacement":"\n    key","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:995:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m986\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn try_increase_position(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m995\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Result<Response, ContractError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected enum `Result`, found `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1mResult<Response, ContractError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found unit type `\u001b[0m\u001b[0m\u001b[1m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider returning the local binding `key`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1018\u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1019\u001b[0m\u001b[0m\u001b[38;5;10m+     key\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors; 4 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors; 4 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0423, E0573.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0423, E0573.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
