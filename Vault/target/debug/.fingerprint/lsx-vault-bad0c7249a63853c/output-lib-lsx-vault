{"message":"unused import: `QueryMsg`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":119,"byte_end":127,"line_start":5,"line_end":5,"column_start":46,"column_end":54,"is_primary":true,"text":[{"text":"use crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg};","highlight_start":46,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":117,"byte_end":127,"line_start":5,"line_end":5,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"use crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg};","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `QueryMsg`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:5:46\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::msg::{ExecuteMsg, InstantiateMsg, QueryMsg};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `Binary`, `CosmosMsg`, `Deps`, `StdResult`, `Uint256`, `to_binary`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":542,"byte_end":551,"line_start":12,"line_end":12,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":553,"byte_end":559,"line_start":12,"line_end":12,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":561,"byte_end":570,"line_start":12,"line_end":12,"column_start":52,"column_end":61,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":52,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":572,"byte_end":576,"line_start":12,"line_end":12,"column_start":63,"column_end":67,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":63,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":578,"byte_end":587,"line_start":12,"line_end":12,"column_start":69,"column_end":78,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":69,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":598,"byte_end":605,"line_start":12,"line_end":12,"column_start":89,"column_end":96,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":89,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":540,"byte_end":587,"line_start":12,"line_end":12,"column_start":31,"column_end":78,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":31,"highlight_end":78}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":596,"byte_end":605,"line_start":12,"line_end":12,"column_start":87,"column_end":96,"is_primary":true,"text":[{"text":"use cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};","highlight_start":87,"highlight_end":96}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Binary`, `CosmosMsg`, `Deps`, `StdResult`, `Uint256`, `to_binary`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:12:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::{entry_point, to_binary, Binary, CosmosMsg, Deps, StdResult, Storage, Uint256};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Coin`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":633,"byte_end":637,"line_start":13,"line_end":13,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response};","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":631,"byte_end":637,"line_start":13,"line_end":13,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response};","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Coin`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:13:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::{Addr, Coin, DepsMut, Env, MessageInfo, Response};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":22370,"byte_end":22400,"line_start":662,"line_end":662,"column_start":61,"column_end":91,"is_primary":true,"text":[{"text":"fn _transfer_out(token:Addr,amount: u128,reciever: Addr) -> Result<Response,ContractError>{","highlight_start":61,"highlight_end":91}],"label":"expected enum `Result`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":22313,"byte_end":22326,"line_start":662,"line_end":662,"column_start":4,"column_end":17,"is_primary":false,"text":[{"text":"fn _transfer_out(token:Addr,amount: u128,reciever: Addr) -> Result<Response,ContractError>{","highlight_start":4,"highlight_end":17}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Response, ContractError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:662:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn _transfer_out(token:Addr,amount: u128,reciever: Addr) -> Result<Response,ContractError>{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected enum `Result`, found `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1mResult<Response, ContractError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found unit type `\u001b[0m\u001b[0m\u001b[1m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"aborting due to previous error; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 3 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
